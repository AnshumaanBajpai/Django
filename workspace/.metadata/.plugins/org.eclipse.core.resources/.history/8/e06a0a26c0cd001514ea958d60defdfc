from django.http import HttpResponse
# RequestContext and loader not needed if we use render
# from django.template import RequestContext, loader

from django.shortcuts import render, get_object_or_404
from polls.models import Question

# Creating the views for polls application

# creating a view for the index of questions
def index(request):
    latest_question_list = Question.objects.order_by('-pub_date')[:5]
    #template = loader.get_template("polls/index.html")
    #context = RequestContext(request, {
    #                                   'latest_question_list': latest_question_list,
    #                                   })
    #return HttpResponse(template.render(context))
    # An alternate short approach to returning the rendering
    context = {'latest_question_list': latest_question_list}
    return render(request, 'polls/index.html', context)


# Creating a view for the details of the question
def detail(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    return render(request, 'polls/index.html', {'question':question})

# Creating a view for the results
def results(request, question_id):
    response = "You're looking at the results of question %s."
    return HttpResponse(response % question_id)

# Creating a view for the vote
def vote(request, question_id):
    return HttpResponse("You're voting on question %s." % question_id)
